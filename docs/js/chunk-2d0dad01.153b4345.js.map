{"version":3,"sources":["webpack://IpageElementExpand/./examples/docs/zh-CN/component/RenderCell/slot_exp_export.md","webpack://IpageElementExpand/examples/docs/zh-CN/component/RenderCell/slot_exp_export.md","webpack://IpageElementExpand/./examples/docs/zh-CN/component/RenderCell/slot_exp_export.md?62ea","webpack://IpageElementExpand/./examples/docs/zh-CN/component/RenderCell/slot_exp_export.md?5ef2"],"names":["render","_vm","this","_c","_self","staticClass","_m","slot","pre","attrs","_v","staticRenderFns","name","components","_h","$createElement","_l","queryList","item","index","key","_s","count","model","value","callback","$$v","expression","democomponentExport","data","_this","isFormItem","props","splitCount","queryApi","fetchDataList","xlsxProps","columns","title","beforeCreateExcel","options","s","r","c","e","console","log","on","clickExport","loadData","methods","params","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","records","firstId","pageNo","pageSize","i","push","label","concat","length","setTimeout","total","stop","_objectSpread","component"],"mappings":"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","file":"js/chunk-2d0dad01.153b4345.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"content element-doc\"},[_vm._m(0),_vm._m(1),_vm._m(2),_c('demo-block',[_c('template',{slot:\"source\"},[_c('element-demo0')],1),_c('template',{slot:\"highlight\"},[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"class\":\"html\"}},[_vm._v(\"<template>\\n    <div>\\n        <p>尝试一下，点击导出。\\n            <p v-for=\\\"item,index in queryList\\\" :key=\\\"index\\\">第{{index+1}}次查询：{{item.count}}</p>\\n        </p>\\n        <RenderCell v-model=\\\"value\\\" :item=\\\"item\\\"/>\\n    </div>\\n</template>\\n<script>\\n    export default {\\n        data(){\\n            return {\\n                value:'',\\n                queryList:[],\\n                item:{\\n                    slot:'export',\\n                    isFormItem:false,\\n                    props:{\\n                        splitCount:30,\\n                        queryApi: this.fetchDataList,\\n                        // 合并单元格，例如合并第一行的前两列\\n                        xlsxProps:{\\n                            // \\\"!merges\\\":[{ s: { r: 0, c: 0 }, e: { r: 0, c: 1 } }],\\n                        },\\n                        columns:[\\n                            {\\n                                title:'项目',\\n                                key:'label'\\n                            },\\n                            {\\n                                title:'数值',\\n                                key:'value'\\n                            }\\n                        ],\\n                        beforeCreateExcel:(data,options)=>{\\n                            options.xlsxProps['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 1, c: 1 } }]\\n                            console.log(data,options,'>>>>beforeCreateExcel')\\n                        }\\n                    },\\n                    on:{\\n                        clickExport:(loadData)=>{\\n                            this.queryList = []\\n                            console.log('clickExport',loadData)\\n                        }\\n                    }\\n                },\\n\\n            }\\n        },\\n        methods:{\\n            async fetchDataList(params){\\n                console.log(params,'params')\\n                // 以下只是模拟接口分页数据\\n                return new Promise((resolve)=>{\\n                    const records = []\\n                    const firstId = (params.pageNo-1)*params.pageSize\\n                    for(let i=0;i<params.pageSize;i++){\\n                        records.push({\\n                            label:`测试数据 - ${firstId+i}`,\\n                            value:`test${firstId+i}`,\\n                        })\\n                    }\\n                    this.queryList.push({count:records.length})\\n                    setTimeout(()=>{\\n                        // 这里返回的数据格式按照ISearch的配置response.data\\n                        resolve({\\n                            data:{\\n                                total:40,\\n                                records\\n                            }\\n                        })\\n                    })\\n                })\\n            }\\n        }\\n    }\\n</script>\\n\")])])])],2),_vm._m(3),_vm._m(4),_vm._m(5),_vm._m(6)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('nav',{staticClass:\"table-of-contents\"},[_c('ol',[_c('li',[_c('a',{attrs:{\"href\":\"#export-fen-ye-cha-xun-dao-chu-zu-jian\"}},[_vm._v(\" export 分页查询导出组件\")]),_c('ol',[_c('li',[_c('a',{attrs:{\"href\":\"#export-zu-jian-shu-xing\"}},[_vm._v(\" export组件属性\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#export-zu-jian-shi-jian\"}},[_vm._v(\" export组件事件\")])])])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h3',{attrs:{\"id\":\"export-fen-ye-cha-xun-dao-chu-zu-jian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#export-fen-ye-cha-xun-dao-chu-zu-jian\"}},[_vm._v(\"¶\")]),_vm._v(\" export 分页查询导出组件\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"业务中，如果需要前端做表单导出，就可以使用这个组件，它会根据分页情况，获取全部的数据并导出成为excel文件。 导出组件在运行时，会先查询一次limit=1的请求，为了获取total数据，然后进行每页数据的获取\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h4',{attrs:{\"id\":\"export-zu-jian-shu-xing\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#export-zu-jian-shu-xing\"}},[_vm._v(\"¶\")]),_vm._v(\" export组件属性\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"属性\")]),_c('th',[_vm._v(\"类型\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"默认值\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"columns\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"Array<{title:string,key:string,width:number,formatter?:Function}>\")]),_c('td',[_vm._v(\"[]，必须填写，不然导出表格是空的\")])]),_c('tr',[_c('td',[_vm._v(\"columnWidth\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"默认的列宽\")]),_c('td',[_vm._v(\"10\")])]),_c('tr',[_c('td',[_vm._v(\"exportButtonProps\")]),_c('td',[_vm._v(\"Object\")]),_c('td',[_vm._v(\"导出按钮的props，直接传递给el-button\")]),_c('td',[_vm._v(\"{type: 'primary',size: 'mini',icon: 'el-icon-download',}\")])]),_c('tr',[_c('td',[_vm._v(\"exportButtonText\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"导出按钮文本\")]),_c('td',[_vm._v(\"导出\")])]),_c('tr',[_c('td',[_vm._v(\"disabled\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"是否禁用\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"fileName\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"导出文件名字\")]),_c('td',[_vm._v(\"无，不填写的话，会用时间戳作为名字\")])]),_c('tr',[_c('td',[_vm._v(\"useExternalData\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"是否使用传入数据，而不是接口获取\")]),_c('td',[_vm._v(\"false\")])]),_c('tr',[_c('td',[_vm._v(\"excelData\")]),_c('td',[_vm._v(\"Array\")]),_c('td',[_vm._v(\"传入的数据，搭配\"),_c('code',[_vm._v(\"useExternalData\")]),_vm._v(\"使用\")]),_c('td',[_vm._v(\"[]\")])]),_c('tr',[_c('td',[_vm._v(\"queryApi\")]),_c('td',[_vm._v(\"Function\")]),_c('td',[_vm._v(\"查询接口方法\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"queryInterval\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"查询接口间隔毫秒数\")]),_c('td',[_vm._v(\"1000\")])]),_c('tr',[_c('td',[_vm._v(\"processQueryDataFunc\")]),_c('td',[_vm._v(\"查询后可以用它来处理数据\")]),_c('td',[_vm._v(\"无\")]),_c('td')]),_c('tr',[_c('td',[_vm._v(\"specifyTotal\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"手动指定total，如果有些接口是无法给total的，可以手动指定导出总数，设置>=0生效\")]),_c('td',[_vm._v(\"-1\")])]),_c('tr',[_c('td',[_vm._v(\"queryParams\")]),_c('td',[_vm._v(\"Object\")]),_c('td',[_vm._v(\"发送给queryApi的额外参数\")]),_c('td',[_vm._v(\"{}\")])]),_c('tr',[_c('td',[_vm._v(\"pageMode\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"分页模式，有page和limit两种\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"search.mode\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"pageSizeKey\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"分页尺寸的key\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"search.pageSize\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"pageNumberKey\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"分页数字的key\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"search.pageNo\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"offsetKey\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"当pageMode=limit时，偏移值的key\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"search.offset\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"limitKey\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"当pageMode=limit时，分页尺寸的key\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"search.limit\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"dataPath\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"从response上获取的数据路径，支持.分割\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"response.data\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"totalPath\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"从response上获取的total路径，支持.分割\")]),_c('td',[_vm._v(\"从配置\"),_c('code',[_vm._v(\"response.total\")]),_vm._v(\"上获取\")])]),_c('tr',[_c('td',[_vm._v(\"splitCount\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"分页查询，每页的数据量\")]),_c('td',[_vm._v(\"100\")])]),_c('tr',[_c('td',[_vm._v(\"splitFileCount\")]),_c('td',[_vm._v(\"Number\")]),_c('td',[_vm._v(\"每多少条分割一次文件\")]),_c('td',[_vm._v(\"10000\")])]),_c('tr',[_c('td',[_vm._v(\"fileMode\")]),_c('td',[_vm._v(\"String\")]),_c('td',[_vm._v(\"auto=根据splitFileCount分割文件，直接下载;zip=根据splitFileCount 分割文件，然后打包成zip；full=不分割文件，直接下载\")]),_c('td',[_vm._v(\"auto\")])]),_c('tr',[_c('td',[_vm._v(\"xlsxProps\")]),_c('td',[_vm._v(\"Object\")]),_c('td',[_vm._v(\"传递给底层xlsx库的参数，用来实现合并单元格等高级功能\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"beforeAction\")]),_c('td',[_vm._v(\"Function\")]),_c('td',[_vm._v(\"执行导出功能前的方法，会等待这个方法完成\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"beforeCreateExcel\")]),_c('td',[_vm._v(\"Function、AsyncFunction\")]),_c('td',[_vm._v(\"创建excel前的方法，会把整体的数据放出来，你也可以再这里修改options的内容，支持异步，你可以接到参数(data,options)，然后返回{data,options}，也可以不返回直接修改原生对象\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"customizeCreateExcel\")]),_c('td',[_vm._v(\"Function\")]),_c('td',[_vm._v(\"你可以接到参数(data,options,callback)自定义导出功能，当需要特别复杂的表的时候，可以从这里拿到全部数据和参数，直接调用xlsx库完全自定义导出，导出完成后记得调一下callback\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"delParamsEmpty\")]),_c('td',[_vm._v(\"Boolean\")]),_c('td',[_vm._v(\"是否删除查询空参数\")]),_c('td',[_vm._v(\"true\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('h4',{attrs:{\"id\":\"export-zu-jian-shi-jian\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#export-zu-jian-shi-jian\"}},[_vm._v(\"¶\")]),_vm._v(\" export组件事件\")])\n},function (){var _vm=this,_c=_vm._self._c;return _c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"事件\")]),_c('th',[_vm._v(\"说明\")]),_c('th',[_vm._v(\"参数\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"clickExport\")]),_c('td',[_vm._v(\"点击导出按钮的时候触发\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"success\")]),_c('td',[_vm._v(\"导出完成\")]),_c('td',[_vm._v(\"无\")])]),_c('tr',[_c('td',[_vm._v(\"error\")]),_c('td',[_vm._v(\"导出错误\")]),_c('td',[_vm._v(\"无\")])])])])\n}]\n\nexport { render, staticRenderFns }","\n    <template>\n      <section class=\"content element-doc\">\n        <nav class=\"table-of-contents\"><ol><li><a href=\"#export-fen-ye-cha-xun-dao-chu-zu-jian\"> export 分页查询导出组件</a><ol><li><a href=\"#export-zu-jian-shu-xing\"> export组件属性</a></li><li><a href=\"#export-zu-jian-shi-jian\"> export组件事件</a></li></ol></li></ol></nav><h3 id=\"export-fen-ye-cha-xun-dao-chu-zu-jian\"><a class=\"header-anchor\" href=\"#export-fen-ye-cha-xun-dao-chu-zu-jian\">¶</a> export 分页查询导出组件</h3>\n<div class=\"tip\">\n<p>业务中，如果需要前端做表单导出，就可以使用这个组件，它会根据分页情况，获取全部的数据并导出成为excel文件。\n导出组件在运行时，会先查询一次limit=1的请求，为了获取total数据，然后进行每页数据的获取</p>\n</div>\n<demo-block>\n        \n        <template slot=\"source\"><element-demo0 /></template>\n        <template slot=\"highlight\"><pre v-pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;p&gt;尝试一下，点击导出。\n            &lt;p v-for=&quot;item,index in queryList&quot; :key=&quot;index&quot;&gt;第{{index+1}}次查询：{{item.count}}&lt;/p&gt;\n        &lt;/p&gt;\n        &lt;RenderCell v-model=&quot;value&quot; :item=&quot;item&quot;/&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    export default {\n        data(){\n            return {\n                value:'',\n                queryList:[],\n                item:{\n                    slot:'export',\n                    isFormItem:false,\n                    props:{\n                        splitCount:30,\n                        queryApi: this.fetchDataList,\n                        // 合并单元格，例如合并第一行的前两列\n                        xlsxProps:{\n                            // &quot;!merges&quot;:[{ s: { r: 0, c: 0 }, e: { r: 0, c: 1 } }],\n                        },\n                        columns:[\n                            {\n                                title:'项目',\n                                key:'label'\n                            },\n                            {\n                                title:'数值',\n                                key:'value'\n                            }\n                        ],\n                        beforeCreateExcel:(data,options)=&gt;{\n                            options.xlsxProps['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 1, c: 1 } }]\n                            console.log(data,options,'&gt;&gt;&gt;&gt;beforeCreateExcel')\n                        }\n                    },\n                    on:{\n                        clickExport:(loadData)=&gt;{\n                            this.queryList = []\n                            console.log('clickExport',loadData)\n                        }\n                    }\n                },\n\n            }\n        },\n        methods:{\n            async fetchDataList(params){\n                console.log(params,'params')\n                // 以下只是模拟接口分页数据\n                return new Promise((resolve)=&gt;{\n                    const records = []\n                    const firstId = (params.pageNo-1)*params.pageSize\n                    for(let i=0;i&lt;params.pageSize;i++){\n                        records.push({\n                            label:`测试数据 - ${firstId+i}`,\n                            value:`test${firstId+i}`,\n                        })\n                    }\n                    this.queryList.push({count:records.length})\n                    setTimeout(()=&gt;{\n                        // 这里返回的数据格式按照ISearch的配置response.data\n                        resolve({\n                            data:{\n                                total:40,\n                                records\n                            }\n                        })\n                    })\n                })\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre></template></demo-block><h4 id=\"export-zu-jian-shu-xing\"><a class=\"header-anchor\" href=\"#export-zu-jian-shu-xing\">¶</a> export组件属性</h4>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>columns</td>\n<td>Array</td>\n<td>Array&lt;{title:string,key:string,width:number,formatter?:Function}&gt;</td>\n<td>[]，必须填写，不然导出表格是空的</td>\n</tr>\n<tr>\n<td>columnWidth</td>\n<td>Number</td>\n<td>默认的列宽</td>\n<td>10</td>\n</tr>\n<tr>\n<td>exportButtonProps</td>\n<td>Object</td>\n<td>导出按钮的props，直接传递给el-button</td>\n<td>{type: 'primary',size: 'mini',icon: 'el-icon-download',}</td>\n</tr>\n<tr>\n<td>exportButtonText</td>\n<td>String</td>\n<td>导出按钮文本</td>\n<td>导出</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>Boolean</td>\n<td>是否禁用</td>\n<td>false</td>\n</tr>\n<tr>\n<td>fileName</td>\n<td>String</td>\n<td>导出文件名字</td>\n<td>无，不填写的话，会用时间戳作为名字</td>\n</tr>\n<tr>\n<td>useExternalData</td>\n<td>Boolean</td>\n<td>是否使用传入数据，而不是接口获取</td>\n<td>false</td>\n</tr>\n<tr>\n<td>excelData</td>\n<td>Array</td>\n<td>传入的数据，搭配<code>useExternalData</code>使用</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>queryApi</td>\n<td>Function</td>\n<td>查询接口方法</td>\n<td>无</td>\n</tr>\n<tr>\n<td>queryInterval</td>\n<td>Number</td>\n<td>查询接口间隔毫秒数</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>processQueryDataFunc</td>\n<td>查询后可以用它来处理数据</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>specifyTotal</td>\n<td>Number</td>\n<td>手动指定total，如果有些接口是无法给total的，可以手动指定导出总数，设置&gt;=0生效</td>\n<td>-1</td>\n</tr>\n<tr>\n<td>queryParams</td>\n<td>Object</td>\n<td>发送给queryApi的额外参数</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>pageMode</td>\n<td>String</td>\n<td>分页模式，有page和limit两种</td>\n<td>从配置<code>search.mode</code>上获取</td>\n</tr>\n<tr>\n<td>pageSizeKey</td>\n<td>String</td>\n<td>分页尺寸的key</td>\n<td>从配置<code>search.pageSize</code>上获取</td>\n</tr>\n<tr>\n<td>pageNumberKey</td>\n<td>String</td>\n<td>分页数字的key</td>\n<td>从配置<code>search.pageNo</code>上获取</td>\n</tr>\n<tr>\n<td>offsetKey</td>\n<td>String</td>\n<td>当pageMode=limit时，偏移值的key</td>\n<td>从配置<code>search.offset</code>上获取</td>\n</tr>\n<tr>\n<td>limitKey</td>\n<td>String</td>\n<td>当pageMode=limit时，分页尺寸的key</td>\n<td>从配置<code>search.limit</code>上获取</td>\n</tr>\n<tr>\n<td>dataPath</td>\n<td>String</td>\n<td>从response上获取的数据路径，支持.分割</td>\n<td>从配置<code>response.data</code>上获取</td>\n</tr>\n<tr>\n<td>totalPath</td>\n<td>String</td>\n<td>从response上获取的total路径，支持.分割</td>\n<td>从配置<code>response.total</code>上获取</td>\n</tr>\n<tr>\n<td>splitCount</td>\n<td>Number</td>\n<td>分页查询，每页的数据量</td>\n<td>100</td>\n</tr>\n<tr>\n<td>splitFileCount</td>\n<td>Number</td>\n<td>每多少条分割一次文件</td>\n<td>10000</td>\n</tr>\n<tr>\n<td>fileMode</td>\n<td>String</td>\n<td>auto=根据splitFileCount分割文件，直接下载;zip=根据splitFileCount 分割文件，然后打包成zip；full=不分割文件，直接下载</td>\n<td>auto</td>\n</tr>\n<tr>\n<td>xlsxProps</td>\n<td>Object</td>\n<td>传递给底层xlsx库的参数，用来实现合并单元格等高级功能</td>\n<td>无</td>\n</tr>\n<tr>\n<td>beforeAction</td>\n<td>Function</td>\n<td>执行导出功能前的方法，会等待这个方法完成</td>\n<td>无</td>\n</tr>\n<tr>\n<td>beforeCreateExcel</td>\n<td>Function、AsyncFunction</td>\n<td>创建excel前的方法，会把整体的数据放出来，你也可以再这里修改options的内容，支持异步，你可以接到参数(data,options)，然后返回{data,options}，也可以不返回直接修改原生对象</td>\n<td>无</td>\n</tr>\n<tr>\n<td>customizeCreateExcel</td>\n<td>Function</td>\n<td>你可以接到参数(data,options,callback)自定义导出功能，当需要特别复杂的表的时候，可以从这里拿到全部数据和参数，直接调用xlsx库完全自定义导出，导出完成后记得调一下callback</td>\n<td>无</td>\n</tr>\n<tr>\n<td>delParamsEmpty</td>\n<td>Boolean</td>\n<td>是否删除查询空参数</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"export-zu-jian-shi-jian\"><a class=\"header-anchor\" href=\"#export-zu-jian-shi-jian\">¶</a> export组件事件</h4>\n<table>\n<thead>\n<tr>\n<th>事件</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clickExport</td>\n<td>点击导出按钮的时候触发</td>\n<td>无</td>\n</tr>\n<tr>\n<td>success</td>\n<td>导出完成</td>\n<td>无</td>\n</tr>\n<tr>\n<td>error</td>\n<td>导出错误</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n\n      </section>\n    </template>\n    <script>\n      export default {\n        name: 'component-doc',\n        components: {\n          \"element-demo0\": (function() {\n    \n    var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[[_c('div',[_c('p',[_vm._v(\"尝试一下，点击导出。\\n            \")]),_vm._l((_vm.queryList),function(item,index){return _c('p',{key:index},[_vm._v(\"第\"+_vm._s(index+1)+\"次查询：\"+_vm._s(item.count))])}),_vm._v(\" \"),_c('p'),_vm._v(\" \"),_c('RenderCell',{attrs:{\"item\":_vm.item},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],2)]],2)}\nvar staticRenderFns = []\n\n  \n    const democomponentExport = {\n        data(){\n            return {\n                value:'',\n                queryList:[],\n                item:{\n                    slot:'export',\n                    isFormItem:false,\n                    props:{\n                        splitCount:30,\n                        queryApi: this.fetchDataList,\n                        // 合并单元格，例如合并第一行的前两列\n                        xlsxProps:{\n                            // \"!merges\":[{ s: { r: 0, c: 0 }, e: { r: 0, c: 1 } }],\n                        },\n                        columns:[\n                            {\n                                title:'项目',\n                                key:'label'\n                            },\n                            {\n                                title:'数值',\n                                key:'value'\n                            }\n                        ],\n                        beforeCreateExcel:(data,options)=>{\n                            options.xlsxProps['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 1, c: 1 } }]\n                            console.log(data,options,'>>>>beforeCreateExcel')\n                        }\n                    },\n                    on:{\n                        clickExport:(loadData)=>{\n                            this.queryList = []\n                            console.log('clickExport',loadData)\n                        }\n                    }\n                },\n\n            }\n        },\n        methods:{\n            async fetchDataList(params){\n                console.log(params,'params')\n                // 以下只是模拟接口分页数据\n                return new Promise((resolve)=>{\n                    const records = []\n                    const firstId = (params.pageNo-1)*params.pageSize\n                    for(let i=0;i<params.pageSize;i++){\n                        records.push({\n                            label:`测试数据 - ${firstId+i}`,\n                            value:`test${firstId+i}`,\n                        })\n                    }\n                    this.queryList.push({count:records.length})\n                    setTimeout(()=>{\n                        // 这里返回的数据格式按照ISearch的配置response.data\n                        resolve({\n                            data:{\n                                total:40,\n                                records\n                            }\n                        })\n                    })\n                })\n            }\n        }\n    }\n    return {\n      render,\n      staticRenderFns,\n      ...democomponentExport\n    }\n  })(),\n        }\n      }\n    </script>\n  ","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js!../../../../../build/md-loader/index.js!./slot_exp_export.md?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/vue-loader/lib/index.js!../../../../../build/md-loader/index.js!./slot_exp_export.md?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./slot_exp_export.md?vue&type=template&id=f6291ce4\"\nimport script from \"./slot_exp_export.md?vue&type=script&lang=js\"\nexport * from \"./slot_exp_export.md?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}