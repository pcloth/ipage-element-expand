(window["webpackJsonpIpageElementExpand"]=window["webpackJsonpIpageElementExpand"]||[]).push([["chunk-2d0dad01"],{"6cca":function(t,e,n){"use strict";n.r(e);var r=function(){var t=this,e=t._self._c;return e("section",{staticClass:"content element-doc"},[t._m(0),t._m(1),t._m(2),e("demo-block",[e("template",{slot:"source"},[e("element-demo0")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <div>\n        <p>尝试一下，点击导出。\n            <p v-for=\"item,index in queryList\" :key=\"index\">第{{index+1}}次查询：{{item.count}}</p>\n        </p>\n        <RenderCell v-model=\"value\" :item=\"item\"/>\n    </div>\n</template>\n<script>\n    export default {\n        data(){\n            return {\n                value:'',\n                queryList:[],\n                item:{\n                    slot:'export',\n                    isFormItem:false,\n                    props:{\n                        splitCount:30,\n                        queryApi: this.fetchDataList,\n                        // 合并单元格，例如合并第一行的前两列\n                        xlsxProps:{\n                            // \"!merges\":[{ s: { r: 0, c: 0 }, e: { r: 0, c: 1 } }],\n                        },\n                        columns:[\n                            {\n                                title:'项目',\n                                key:'label'\n                            },\n                            {\n                                title:'数值',\n                                key:'value'\n                            }\n                        ],\n                        beforeCreateExcel:(data,options)=>{\n                            options.xlsxProps['!merges'] = [{ s: { r: 0, c: 0 }, e: { r: 1, c: 1 } }]\n                            console.log(data,options,'>>>>beforeCreateExcel')\n                        }\n                    },\n                    on:{\n                        clickExport:(loadData)=>{\n                            this.queryList = []\n                            console.log('clickExport',loadData)\n                        }\n                    }\n                },\n\n            }\n        },\n        methods:{\n            async fetchDataList(params){\n                console.log(params,'params')\n                // 以下只是模拟接口分页数据\n                return new Promise((resolve)=>{\n                    const records = []\n                    const firstId = (params.pageNo-1)*params.pageSize\n                    for(let i=0;i<params.pageSize;i++){\n                        records.push({\n                            label:`测试数据 - ${firstId+i}`,\n                            value:`test${firstId+i}`,\n                        })\n                    }\n                    this.queryList.push({count:records.length})\n                    setTimeout(()=>{\n                        // 这里返回的数据格式按照ISearch的配置response.data\n                        resolve({\n                            data:{\n                                total:40,\n                                records\n                            }\n                        })\n                    })\n                })\n            }\n        }\n    }\n<\/script>\n")])])])],2),t._m(3),t._m(4),t._m(5),t._m(6)],1)},a=[function(){var t=this,e=t._self._c;return e("nav",{staticClass:"table-of-contents"},[e("ol",[e("li",[e("a",{attrs:{href:"#export-fen-ye-cha-xun-dao-chu-zu-jian"}},[t._v(" export 分页查询导出组件")]),e("ol",[e("li",[e("a",{attrs:{href:"#export-zu-jian-shu-xing"}},[t._v(" export组件属性")])]),e("li",[e("a",{attrs:{href:"#export-zu-jian-shi-jian"}},[t._v(" export组件事件")])])])])])])},function(){var t=this,e=t._self._c;return e("h3",{attrs:{id:"export-fen-ye-cha-xun-dao-chu-zu-jian"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-fen-ye-cha-xun-dao-chu-zu-jian"}},[t._v("¶")]),t._v(" export 分页查询导出组件")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"tip"},[e("p",[t._v("业务中，如果需要前端做表单导出，就可以使用这个组件，它会根据分页情况，获取全部的数据并导出成为excel文件。 导出组件在运行时，会先查询一次limit=1的请求，为了获取total数据，然后进行每页数据的获取")])])},function(){var t=this,e=t._self._c;return e("h4",{attrs:{id:"export-zu-jian-shu-xing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-zu-jian-shu-xing"}},[t._v("¶")]),t._v(" export组件属性")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("属性")]),e("th",[t._v("类型")]),e("th",[t._v("说明")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("columns")]),e("td",[t._v("Array")]),e("td",[t._v("Array<{title:string,key:string,width:number,formatter?:Function}>")]),e("td",[t._v("[]，必须填写，不然导出表格是空的")])]),e("tr",[e("td",[t._v("columnWidth")]),e("td",[t._v("Number")]),e("td",[t._v("默认的列宽")]),e("td",[t._v("10")])]),e("tr",[e("td",[t._v("exportButtonProps")]),e("td",[t._v("Object")]),e("td",[t._v("导出按钮的props，直接传递给el-button")]),e("td",[t._v("{type: 'primary',size: 'mini',icon: 'el-icon-download',}")])]),e("tr",[e("td",[t._v("exportButtonText")]),e("td",[t._v("String")]),e("td",[t._v("导出按钮文本")]),e("td",[t._v("导出")])]),e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("Boolean")]),e("td",[t._v("是否禁用")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("fileName")]),e("td",[t._v("String")]),e("td",[t._v("导出文件名字")]),e("td",[t._v("无，不填写的话，会用时间戳作为名字")])]),e("tr",[e("td",[t._v("useExternalData")]),e("td",[t._v("Boolean")]),e("td",[t._v("是否使用传入数据，而不是接口获取")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("excelData")]),e("td",[t._v("Array")]),e("td",[t._v("传入的数据，搭配"),e("code",[t._v("useExternalData")]),t._v("使用")]),e("td",[t._v("[]")])]),e("tr",[e("td",[t._v("queryApi")]),e("td",[t._v("Function")]),e("td",[t._v("查询接口方法")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("queryInterval")]),e("td",[t._v("Number")]),e("td",[t._v("查询接口间隔毫秒数")]),e("td",[t._v("1000")])]),e("tr",[e("td",[t._v("processQueryDataFunc")]),e("td",[t._v("查询后可以用它来处理数据")]),e("td",[t._v("无")]),e("td")]),e("tr",[e("td",[t._v("specifyTotal")]),e("td",[t._v("Number")]),e("td",[t._v("手动指定total，如果有些接口是无法给total的，可以手动指定导出总数，设置>=0生效")]),e("td",[t._v("-1")])]),e("tr",[e("td",[t._v("queryParams")]),e("td",[t._v("Object")]),e("td",[t._v("发送给queryApi的额外参数")]),e("td",[t._v("{}")])]),e("tr",[e("td",[t._v("pageMode")]),e("td",[t._v("String")]),e("td",[t._v("分页模式，有page和limit两种")]),e("td",[t._v("从配置"),e("code",[t._v("search.mode")]),t._v("上获取")])]),e("tr",[e("td",[t._v("pageSizeKey")]),e("td",[t._v("String")]),e("td",[t._v("分页尺寸的key")]),e("td",[t._v("从配置"),e("code",[t._v("search.pageSize")]),t._v("上获取")])]),e("tr",[e("td",[t._v("pageNumberKey")]),e("td",[t._v("String")]),e("td",[t._v("分页数字的key")]),e("td",[t._v("从配置"),e("code",[t._v("search.pageNo")]),t._v("上获取")])]),e("tr",[e("td",[t._v("offsetKey")]),e("td",[t._v("String")]),e("td",[t._v("当pageMode=limit时，偏移值的key")]),e("td",[t._v("从配置"),e("code",[t._v("search.offset")]),t._v("上获取")])]),e("tr",[e("td",[t._v("limitKey")]),e("td",[t._v("String")]),e("td",[t._v("当pageMode=limit时，分页尺寸的key")]),e("td",[t._v("从配置"),e("code",[t._v("search.limit")]),t._v("上获取")])]),e("tr",[e("td",[t._v("dataPath")]),e("td",[t._v("String")]),e("td",[t._v("从response上获取的数据路径，支持.分割")]),e("td",[t._v("从配置"),e("code",[t._v("response.data")]),t._v("上获取")])]),e("tr",[e("td",[t._v("totalPath")]),e("td",[t._v("String")]),e("td",[t._v("从response上获取的total路径，支持.分割")]),e("td",[t._v("从配置"),e("code",[t._v("response.total")]),t._v("上获取")])]),e("tr",[e("td",[t._v("splitCount")]),e("td",[t._v("Number")]),e("td",[t._v("分页查询，每页的数据量")]),e("td",[t._v("100")])]),e("tr",[e("td",[t._v("splitFileCount")]),e("td",[t._v("Number")]),e("td",[t._v("每多少条分割一次文件")]),e("td",[t._v("10000")])]),e("tr",[e("td",[t._v("fileMode")]),e("td",[t._v("String")]),e("td",[t._v("auto=根据splitFileCount分割文件，直接下载;zip=根据splitFileCount 分割文件，然后打包成zip；full=不分割文件，直接下载")]),e("td",[t._v("auto")])]),e("tr",[e("td",[t._v("xlsxProps")]),e("td",[t._v("Object")]),e("td",[t._v("传递给底层xlsx库的参数，用来实现合并单元格等高级功能")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("beforeAction")]),e("td",[t._v("Function")]),e("td",[t._v("执行导出功能前的方法，会等待这个方法完成")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("beforeCreateExcel")]),e("td",[t._v("Function、AsyncFunction")]),e("td",[t._v("创建excel前的方法，会把整体的数据放出来，你也可以再这里修改options的内容，支持异步，你可以接到参数(data,options)，然后返回{data,options}，也可以不返回直接修改原生对象")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("customizeCreateExcel")]),e("td",[t._v("Function")]),e("td",[t._v("自定义导出功能，当需要特别复杂的表的时候，可以从这里拿到全部数据和参数，直接调用xlsx库完全自定义导出")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("delParamsEmpty")]),e("td",[t._v("Boolean")]),e("td",[t._v("是否删除查询空参数")]),e("td",[t._v("true")])])])])},function(){var t=this,e=t._self._c;return e("h4",{attrs:{id:"export-zu-jian-shi-jian"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#export-zu-jian-shi-jian"}},[t._v("¶")]),t._v(" export组件事件")])},function(){var t=this,e=t._self._c;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("clickExport")]),e("td",[t._v("点击导出按钮的时候触发")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("success")]),e("td",[t._v("导出完成")]),e("td",[t._v("无")])]),e("tr",[e("td",[t._v("error")]),e("td",[t._v("导出错误")]),e("td",[t._v("无")])])])])}],o=n("5530"),s=n("c7eb"),d=n("1da1"),i=(n("14d9"),n("d3b7"),{name:"component-doc",components:{"element-demo0":function(){var t=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[[n("div",[n("p",[t._v("尝试一下，点击导出。\n            ")]),t._l(t.queryList,(function(e,r){return n("p",{key:r},[t._v("第"+t._s(r+1)+"次查询："+t._s(e.count))])})),t._v(" "),n("p"),t._v(" "),n("RenderCell",{attrs:{item:t.item},model:{value:t.value,callback:function(e){t.value=e},expression:"value"}})],2)]],2)},e=[],n={data:function(){var t=this;return{value:"",queryList:[],item:{slot:"export",isFormItem:!1,props:{splitCount:30,queryApi:this.fetchDataList,xlsxProps:{},columns:[{title:"项目",key:"label"},{title:"数值",key:"value"}],beforeCreateExcel:function(t,e){e.xlsxProps["!merges"]=[{s:{r:0,c:0},e:{r:1,c:1}}],console.log(t,e,">>>>beforeCreateExcel")}},on:{clickExport:function(e){t.queryList=[],console.log("clickExport",e)}}}}},methods:{fetchDataList:function(t){var e=this;return Object(d["a"])(Object(s["a"])().mark((function n(){return Object(s["a"])().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return console.log(t,"params"),n.abrupt("return",new Promise((function(n){for(var r=[],a=(t.pageNo-1)*t.pageSize,o=0;o<t.pageSize;o++)r.push({label:"测试数据 - ".concat(a+o),value:"test".concat(a+o)});e.queryList.push({count:r.length}),setTimeout((function(){n({data:{total:40,records:r}})}))})));case 2:case"end":return n.stop()}}),n)})))()}}};return Object(o["a"])({render:t,staticRenderFns:e},n)}()}}),v=i,_=n("2877"),l=Object(_["a"])(v,r,a,!1,null,null,null);e["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d0dad01.7a655dcb.js.map